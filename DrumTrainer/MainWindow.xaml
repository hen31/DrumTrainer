<mahApps:MetroWindow x:Class="DrumTrainer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:DrumTrainer.Controls"
        xmlns:local="clr-namespace:DrumTrainer"
        xmlns:vm="clr-namespace:DrumTrainer.ViewModels"
                     xmlns:converters="clr-namespace:DrumTrainer.Converters"
                     xmlns:iconPack="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="DrumTrainer" Height="450" Width="800">
    <mahApps:MetroWindow.Resources>
        <DataTemplate  DataType="{x:Type vm:PlayedNote}">
            <Border Background="Red" BorderBrush="DarkBlue" BorderThickness="2" CornerRadius="2" Margin="2">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{Binding Drum}" Margin="2"/>
                    <TextBlock Text="{Binding HappendAt,Converter={converters:ElapsedTimeToStringConverter}}" Margin="2"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:BeatNote}">
            <Border BorderThickness="2" CornerRadius="2" Margin="2">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="Yellow"/>
                        <Setter Property="BorderBrush" Value="Orange"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Played}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="BorderBrush" Value="DarkGreen"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{Binding Drum}" Margin="2"/>
                    <TextBlock Text="{Binding ShouldBePlayedAt,Converter={converters:ElapsedTimeToStringConverter}}" Visibility="{Binding Played, Converter={converters:BoolToVisibilityInversedConverter}}" Margin="2"/>
                    <TextBlock Text="{Binding PlayedAt,Converter={converters:ElapsedTimeToStringConverter}}"   Visibility="{Binding Played, Converter={converters:BoolToVisibilityConverter}}" Margin="2"/>
                </StackPanel>
            </Border>
        </DataTemplate>
    </mahApps:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MaxHeight="250"/>
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="Bestand">
                <MenuItem Header="Opslaan" Command="{Binding SaveCommand}"/>
                <MenuItem Header="Openen"  Command="{Binding OpenCommand}"/>
            </MenuItem>
            <MenuItem Header="Midi">
                <MenuItem Header="Apparaten" ItemsSource="{Binding MidiDevices}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <MenuItem Command="{Binding DataContext.SelectMidiDeviceCommand, RelativeSource={RelativeSource AncestorType=Menu}}" CommandParameter="{Binding Path=.}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsEnabled="False">
                                            <CheckBox.IsChecked>
                                                <MultiBinding Converter="{converters:SameObjectConverter}">
                                                    <Binding Path="ProductId" Mode="OneWay"/>
                                                    <Binding Path="DataContext.SelectedMidiDevice.ProductId" RelativeSource="{RelativeSource AncestorType=Menu}" Mode="OneWay"/>
                                                </MultiBinding>
                                            </CheckBox.IsChecked>
                                        </CheckBox>
                                        <TextBlock Text="{Binding ProductName}"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <MenuItem Header="Instellingen"  Command="{Binding MidiSettingsCommand}"/>

            </MenuItem>
            <MenuItem Header="Spotify">
                <MenuItem Header="Inloggen bij spotify"  Command="{Binding LoginSpotifyCommand}"/>
                <MenuItem Header="Apparaten" ItemsSource="{Binding SpotifyDevices}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <MenuItem Command="{Binding DataContext.SelectSpotifyDeviceCommand, RelativeSource={RelativeSource AncestorType=Menu}}" CommandParameter="{Binding Path=.}">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsEnabled="False">
                                            <CheckBox.IsChecked>
                                                <MultiBinding Converter="{converters:SameObjectConverter}">
                                                    <Binding Path="Id" Mode="OneWay"/>
                                                    <Binding Path="DataContext.SelectedSpotifyDeviceId" RelativeSource="{RelativeSource AncestorType=Menu}" Mode="OneWay"/>
                                                </MultiBinding>
                                            </CheckBox.IsChecked>
                                        </CheckBox>
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
            </MenuItem>
        </Menu>

        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <controls:MetronomeControl Grid.Row="1" Metronome="{Binding Metronome}" x:Name="metronomeControl" BeatsPerMeasure="{Binding BeatsPerMeasure, Mode=TwoWay}"/>
            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="DarkGreen" Command="{Binding SelectSpotifySongCommand}" Margin="5">
                <iconPack:FontAwesome Kind="SpotifyBrands"  />
            </Button>
            <TextBlock Margin="2" Text="{Binding Song.SpotifyName, StringFormat={}Spotify:{0}}" VerticalAlignment="Center" FontWeight="Bold" Visibility="{Binding Song.SpotifyName, Converter={converters:StringIsEmptyConverter}}"/>
        </StackPanel>
        <ScrollViewer Grid.Row="2" Grid.ColumnSpan="3" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Visibility="{Binding DataContext.Metronome.IsPlaying,RelativeSource={RelativeSource AncestorType=local:MainWindow}, Converter={converters:BoolToVisibilityInversedConverter}}">
            <ItemsControl Grid.Row="2" ItemsSource="{Binding Song.Measures}" >
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" >
                                <Button VerticalAlignment="Center" HorizontalAlignment="Center" 
                                    Command="{Binding DataContext.EditMeasureCommand,RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                    CommandParameter="{Binding}" Margin="5">
                                    <iconPack:FontAwesome Kind="EditRegular"  />
                                </Button>

                                <Label VerticalAlignment="Center" Content="Aantal herhalingen:"/>
                                <mahApps:NumericUpDown Minimum="1" Maximum="300" Value="{Binding RepeatCount}"/>

                                <Button VerticalAlignment="Center" HorizontalAlignment="Center" 
                                    Command="{Binding DataContext.DeleteMeasureCommand,RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                    CommandParameter="{Binding}" Margin="5">
                                    <iconPack:FontAwesome Kind="TrashSolid"  />
                                </Button>
                                <Button VerticalAlignment="Center" HorizontalAlignment="Center" 
                                    Command="{Binding DataContext.AddMeasureCommand,RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                    CommandParameter="{Binding}" Margin="5">
                                    <iconPack:FontAwesome Kind="PlusSolid"  />
                                </Button>
                            </StackPanel>

                            <controls:TimelineControl Grid.Row="3" 
                                  MusicMeasure="{Binding}" 
                                  Notes="{Binding Notes,Mode=TwoWay}"
                                  CurrentBeat="{Binding DataContext.CurrentBeat,Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                  CurrentNote="{Binding DataContext.CurrentNote,Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                  BeatsPerMeasure="{Binding BeatsPerMeasure, ElementName=metronomeControl}"
                                  CurrentMeasureCount="{Binding DataContext.CurrentMeasureCount, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"                    
                                  CurrentMeasure="{Binding DataContext.CurrentMusicMeasure, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"                    
                                  Playing="True"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <Grid Visibility="{Binding DataContext.Metronome.IsPlaying,RelativeSource={RelativeSource AncestorType=local:MainWindow}, Converter={converters:BoolToVisibilityConverter}}" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <controls:TimelineControl Grid.Row="0" 
                                  MusicMeasure="{Binding CurrentMusicMeasure}" 
                                  Notes="{Binding CurrentMusicMeasure.Notes,Mode=TwoWay}"
                                  CurrentBeat="{Binding CurrentBeat,Mode=TwoWay}"
                                  CurrentNote="{Binding CurrentNote,Mode=TwoWay}"
                                  BeatsPerMeasure="{Binding BeatsPerMeasure, ElementName=metronomeControl}"
                                  CurrentMeasureCount="{Binding CurrentMeasureCount}"                    
                                  CurrentMeasure="{Binding CurrentMusicMeasure}"         
                                  Song="{Binding Song}"
                                  Playing="True"/>

            <controls:TimelineControl Grid.Row="1" 
                                  MusicMeasure="{Binding NextMusicMeasure}" 
                                  Notes="{Binding NextMusicMeasure.Notes,Mode=TwoWay}"
                                  CurrentBeat="{Binding CurrentBeat,Mode=TwoWay}"
                                  CurrentNote="{Binding CurrentNote,Mode=TwoWay}"
                                  BeatsPerMeasure="{Binding BeatsPerMeasure, ElementName=metronomeControl}"
                                  CurrentMeasureCount="{Binding CurrentMeasureCount}"                    
                                  CurrentMeasure="{Binding CurrentMusicMeasure}"  
                                       Song="{Binding Song}"
                                  Playing="False"/>

            <controls:TimelineControl Grid.Row="2" 
                                  MusicMeasure="{Binding NextPlusOneMusicMeasure}" 
                                  Notes="{Binding NextPlusOneMusicMeasure.Notes,Mode=TwoWay}"
                                  CurrentBeat="{Binding CurrentBeat,Mode=TwoWay}"
                                  CurrentNote="{Binding CurrentNote,Mode=TwoWay}"
                                  BeatsPerMeasure="{Binding BeatsPerMeasure, ElementName=metronomeControl}"
                                  CurrentMeasureCount="{Binding CurrentMeasureCount}"                    
                                  CurrentMeasure="{Binding CurrentMusicMeasure}"     
                                       Song="{Binding Song}"
                                  Playing="False"/>

        </Grid>



        <ItemsControl ItemsSource="{Binding ExpectedNotesPerBeat}" Grid.Row="3">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="3" CornerRadius="2" Margin="2">
                        <ItemsControl ItemsSource="{Binding NotesPerPosistions}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="{DynamicResource MahApps.Brushes.Accent2}"
                                            BorderThickness="2" CornerRadius="1" Margin="2">
                                        <ItemsControl ItemsSource="{Binding Notes}"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Grid Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Percentage" Margin="2"/>
            <ProgressBar Grid.Column="1" Maximum="100" Margin="2" Minimum="0" Value="{Binding GoodPercentage}"/>
            <TextBlock Text="{Binding ExtraHitsCount,StringFormat={}Aantal extra slagen: {0}}" Margin="2" Grid.Column="2"/>
            <TextBlock Text="{Binding MissedHitsCount,StringFormat={}Aantal gemiste slagen: {0}}" Margin="2" Grid.Column="3"/>
            <TextBlock Text="{Binding HitsCount,StringFormat={}Aantal goede slagen: {0}}" Margin="2" Grid.Column="4"/>

        </Grid>

        <Separator Grid.Row="6"/>

        <ScrollViewer Grid.Row="7" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <ListBox ItemsSource="{Binding FullTimeLineNotes}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </ScrollViewer>



    </Grid>
</mahApps:MetroWindow>
